#!/usr/bin/env node

var program = require('commander'),
    path = require('path'),
    fs = require('fs'),
    retina = require('..');

program
  .version(require('../package.json').version)
  .usage('[options] [< in [> out]] [file]')
  .option('-t, --target <path>', 'target path relative to input', 'images/generated/scaled')
  .option('-s, --source <path>', 'source path relative to input (required when stdin is used)')
  .parse(process.argv);

var file = program.args[0];

if (file) {
    var input = fs.readFileSync(file, 'utf-8');
    var output = retina(input, program.source || path.dirname(file), program.target);

    process.stdout.write(output);
} else if (program.source) {
    var chunks = [];

    process.stdin.on('data', chunks.push.bind(chunks));
    process.stdin.on('end', function() {
        var output = retina(chunks.join(''), program.source, program.target);

        process.stdout.write(output);
    });

    process.stdin.setEncoding('utf8');
    process.stdin.resume();
} else {
    console.log('  Error: Missing required parameter source');

    program.help();
}